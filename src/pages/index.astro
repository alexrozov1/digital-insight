---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const news = (await getCollection('news')).slice(0,3);
const cases = (await getCollection('cases')).slice(0,3);
---
<BaseLayout title="Digital Insight — Digital analytics, clearly" description="News that matters, cases from real work, and useful resources.">
  <section class="container mx-auto px-4 md:px-6 lg:px-8 py-12">
    <div class="grid lg:grid-cols-2 gap-8 items-center">
      <div>
        <h1 class="text-3xl md:text-5xl font-extrabold tracking-tight">Digital Analytics, explained clearly.</h1>
        <p class="mt-4 text-zinc-600 dark:text-zinc-300 max-w-2xl">
          News that matters, cases from real work, and useful resources — without the fluff.
        </p>
        <div class="mt-6 flex items-center gap-3">
          <a href="/news" class="rounded-2xl px-4 py-2 text-sm font-medium shadow-sm hover:shadow bg-zinc-900 text-white dark:bg-zinc-100 dark:text-zinc-900">Read latest</a>
          <a href="/guides" class="text-sm font-medium underline underline-offset-4">Explore guides</a>
        </div>
      </div>
<div class="aspect-video w-full overflow-hidden rounded-xl ring-1 ring-inset ring-zinc-200 dark:ring-zinc-800 relative">
  <svg viewBox="0 0 1200 675" class="absolute inset-0 h-full w-full" aria-hidden="true">
    <defs>
      <linearGradient id="g1" x1="0" y1="0" x2="1" y2="1">
        <stop offset="0%" stop-opacity="1" stop-color="#a78bfa" />
        <stop offset="100%" stop-opacity="1" stop-color="#22d3ee" />
      </linearGradient>
      <radialGradient id="g2" cx="75%" cy="25%" r="60%">
        <stop offset="0%" stop-color="white" stop-opacity="0.25"/>
        <stop offset="100%" stop-color="white" stop-opacity="0"/>
      </radialGradient>
    </defs>
    <rect width="1200" height="675" fill="url(#g1)"/>
    <g opacity="0.25">
      <!-- subtle grid -->
      {Array.from({length: 24}).map((_,i) => (
        <line x1={i*50} y1="0" x2={i*50} y2="675" stroke="white" stroke-opacity="0.15" stroke-width="1"/>
      ))}
      {Array.from({length: 12}).map((_,i) => (
        <line x1="0" y1={i*56} x2="1200" y2={i*56} stroke="white" stroke-opacity="0.12" stroke-width="1"/>
      ))}
    </g>
    <rect width="1200" height="675" fill="url(#g2)"/>
  </svg>
  <div class="absolute inset-0 flex items-center justify-center">
    <span class="text-sm/5 text-white/80 drop-shadow">Digital analytics, beautifully simple</span>
  </div>
</div>
        <div class="mt-4 grid sm:grid-cols-2 gap-4">
          {cases.map((c) => (
            <article class="rounded-2xl border border-zinc-200 dark:border-zinc-800 p-4">
              <h3 class="font-semibold leading-snug">{c.data.title}</h3>
              <p class="text-sm text-zinc-600 dark:text-zinc-300 mt-1">{c.data.excerpt}</p>
            </article>
          ))}
        </div>
      </div>
    </div>
  </section>

  <section class="container mx-auto px-4 md:px-6 lg:px-8 py-10" id="news">
    <div class="flex items-center gap-3 mb-6">
      <h2 class="text-2xl md:text-3xl font-bold tracking-tight">This week in analytics</h2>
    </div>
    <div class="grid lg:grid-cols-3 gap-4">
      {news.map((n) => (
        <a href={`/news/${n.slug}/`} class="rounded-2xl border border-zinc-200 dark:border-zinc-800 p-5 block hover:shadow">
          <div class="text-xs uppercase tracking-wide text-zinc-500">{(n.data.topics||[]).join(' / ')}</div>
          <h3 class="mt-2 font-semibold leading-snug">{n.data.title}</h3>
          <p class="text-sm text-zinc-600 dark:text-zinc-300 mt-2">{n.data.excerpt}</p>
        </a>
      ))}
    </div>
  </section>
</BaseLayout>
